family = binomial(link = "probit"))
age_zero <- lrtest(model_probit_ext, model_probit_restr) # pvalue - маленький -> оснвоная отвергается
age_lin_zero[2, 5]
data.frame('P-value'=c(age_lin_zero[2, 5], age_zero[2, 5]))
data.frame('P-value'=c(age_lin_zero[2, 5], age_zero[2, 5]),
row.names = c('age', 'age + age^2'))
data.frame('P-value'=c(age_lin_zero[2, 5], age_zero[2, 5]),
row.names = c('age', 'age + age^2'))
stargazer(data.frame('P-value'=c(age_lin_zero[2, 5], age_zero[2, 5]),
row.names = c('age', 'age + age^2')),
summary=FALSE)
# 4.4.3
# H_0: age = k*age^2
k_times <- function(k){
model_full <- glm(formula = employed ~ nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids,
data=h, family = binomial(link = "probit"))
model_restr <- glm(formula = employed ~ nwifeinc + I(age + age^2 * k) + I(nwifeinc * hasKids) + hasKids,
data=h,
family = binomial(link = "probit"))
return(lrtest(model_full, model_restr))
}
model_logit <- glm(formula = employed ~
nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids,
data=h,
family = binomial(link = "logit"))
k_times
k_times(10)
k_times(1)
k_times(2)
k_times(4)
k_times(99999)
k_times(999999999999)
k_times(0.0001)
k_times(0.000000001)
k_times(-0.000000001)
k_times(-1)
k_times(-99991)
k_times(0)
print(k_times(0))
return(lrtest(model_full, model_restr))
# 4.4.3
# H_0: age = k*age^2
k_times_test <- function(k){
model_full <- glm(formula = employed ~ nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids,
data=h, family = binomial(link = "probit"))
model_restr <- glm(formula = employed ~ nwifeinc + I(age + age^2 * k) + I(nwifeinc * hasKids) + hasKids,
data=h,
family = binomial(link = "probit"))
return(lrtest(model_full, model_restr))
}
print(k_times_test(0))
return(lrtest(model_full, model_restr))
# 4.4.4
k_times_and_t_test <- function(k, t){
model_full <- glm(formula = employed ~ nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids,
data=h, family = binomial(link = "probit"))
model_restr <- glm(formula = employed ~ nwifeinc + I(age + age^2 * k) + I(nwifeinc * hasKids) + hasKids,
data=h,
offset= I(t*hasKids),
family = binomial(link = "probit"))
return(lrtest(model_full, model_restr))
}
print(k_times_and_t_test(1, 2))
print(k_times_and_t_test(1, 3))
print(k_times_and_t_test(1, 4))
print(k_times_and_t_test(1, 0))
print(k_times_and_t_test(1, -1000))
# 4.4.4
k_times_and_t_test <- function(k, t){
model_full <- glm(formula = employed ~ nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids,
data=h, family = binomial(link = "probit"))
model_restr <- glm(formula = employed ~ nwifeinc + I(age + age^2 * k) + I(nwifeinc * hasKids),
data=h,
offset= I(t*hasKids),
family = binomial(link = "probit"))
return(lrtest(model_full, model_restr))
}
print(k_times_and_t_test(1, -1000))
print(k_times_and_t_test(1, 1))
print(k_times_and_t_test(1, 2))
print(k_times_and_t_test(1, 20000))
print(k_times_and_t_test(1, 1.3))
print(k_times_and_t_test(2, 1.3))
print(k_times_and_t_test(200, 1.3))
print(k_times_and_t_test(20000000, 1.3))
print(k_times_and_t_test(20000000, 20000000))
print(k_times_and_t_test(200, 1.3))
print(k_times_and_t_test(1, 1.3))
print(k_times_and_t_test(0.5, 1.3))
print(k_times_and_t_test(0.5, 0))
model_restr <- glm(formula = employed ~ nwifeinc + I(age + age^2 * k) ,
data=h,
offset= I(t * hasKids) + I(nwifeinc * t*hasKids),
family = binomial(link = "probit"))
return(lrtest(model_full, model_restr))
# 4.4.4
k_times_and_t_test <- function(k, t){
model_full <- glm(formula = employed ~ nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids,
data=h, family = binomial(link = "probit"))
model_restr <- glm(formula = employed ~ nwifeinc + I(age + age^2 * k) ,
data=h,
offset= I(t * hasKids) + I(nwifeinc * t*hasKids),
family = binomial(link = "probit"))
return(lrtest(model_full, model_restr))
}
print(k_times_and_t_test(0.5, 0))
print(k_times_and_t_test(0.5, 1))
model_logit <- glm(formula = employed ~
nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids,
data=h,
family = binomial(link = "logit"))
print(k_times_and_t_test(0.5, 1))
print(k_times_and_t_test(0.5, 2))
print(k_times_and_t_test(0.5, -200))
print(k_times_and_t_test(0.5, e-10))
print(k_times_and_t_test(0.5, e-10))
print(k_times_and_t_test(0.5, 1e-10))
print(k_times_and_t_test(0.5, 1e-100))
print(k_times_test(k=2))
print(k_times_test(k = 1e-3))
print(k_times_test(k = 1e-30))
print(k_times_test(k = 1e-3))
print(k_times_test(k = -1e-3))
print(k_times_test(k = 1e-3))
print(k_times_test(k = 20))
h
head(h)
# Подготавливаем данные для анализа
X_given <- h[, c('nwifeinc', 'age', 'lfp', 'wage', 'repwage', 'city')]
data(Mroz87)
h <- na.omit(Mroz87)
h
# Подготавливаем данные для анализа
X_given <- h[, c('nwifeinc', 'age', 'lfp', 'wage', 'repwage', 'city')]
# Если у женщины есть маленькие детки, то для нее дамми = 1
hasKids <- as.numeric(h[, 'kids5'] > 0)
h <- cbind(1, X_given, hasKids)
colnames(h)[1] <- "Const"
colnames(h)[4] <- "employed"
head(h)
print(check_function())
# 4.4.5
# Нужно просто проверить значимость коэффициента перед дамми - город:
check_function <- function(){
model_full <- glm(formula = employed ~ nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids + city,
data=h, family = binomial(link = "probit"))
model_restr <- glm(formula = employed ~ nwifeinc + age + I(age^2) + I(nwifeinc * hasKids),
data=h,
family = binomial(link = "probit"))
return(lrtest(model_full, model_restr))
}
print(check_function())
# выполнения домашнего задания
library("GJRM")                                                  # система бинарных уравнений
head(h)
formula_1 <- employed ~ nwifeinc + age + I(age^2) + I(nwifeinc * hasKids) + hasKids
formula_2 <- city ~ wage + hasKids + employed + age + I(age^2)
formula_2
class(formula_2)
model_bp <- gjrm(formula = list(formula_1, formula_2),
data=h,
Model="B",
margins = c("probit", "probit"),
BivD="N")
summary(model_bp)
stargazer(model_bp, summary = FALSE)
class(model_bp)
attributes(model_bp)
model_bp
summary(model_bp)
install.packages('rio')
usd <- import(file.choose())
library(forecast)
library(tidyverse)
library(tseries)
library(gridExtra)
library(rio)
usd <- import(file.choose())
zvr <- import(file.choose())
library(forecast)
library(tidyverse)
library(tseries)
library(gridExtra)
library(rio)
usd <- import(file.choose())
zvr <- import(file.choose())
View(usd)
usd$USD
plot(usd$T, usd$USD)
plot(usd$T, usd$USD, type='l')
View(usd)
usd_ts <- ts(usd, start=c(1997, 1), frequency=12)
usd_ts
usd_ts <- ts(usd$USD, start=c(1997, 1), frequency=12)
usd_ts
zvr_ts <- ts(zvr$ZVR, start=c(1997, 1), frequency=12)
zvr_ts
plot(usd_ts, type='l')
autoplot()
plot(zvr_ts, type='l')
plot(log(zvr_ts), type='l')
plot(log(usd_ts), type='l')
ggAcf(usd_ts)
ggPacf(usd_ts)
ggAcf(usd_ts)
ggAcf(zvr_ts)
ggPacf(zvr_ts)
Box.test(zvr_ts, lag=24, fitdf = 0, type='Lj')
usd <- import(file.choose())
library(gridExtra)
library(readr)
library(readr)
library(forecast)
library(forecast)
library(ggplot2)
library(ggplot2)
library(gridExtra)
arima
?arima.sim
head(usconsumption)
library(fpp)
library(fpp)
library(vars)
data(usconsumption, package = "fpp")
head(usconsumption)
library(vars)
data(usconsumption, package = "fpp")
head(usconsumption)
```{r, eval=F}
Загружаем данные из пакетов:
```{r}
data(usconsumption, package = "fpp")
head(usconsumption)
```
Загружаем данные из пакетов:
```{r}
data(usconsumption, package = "fpp")
head(usconsumption)
```
Загружаем данные из пакетов:
```{r}
data(usconsumption, package = "fpp")
head(usconsumption)
```
data(usconsumption, package = "fpp")
head(usconsumption)
VARselect(usconsumption, lag.max=7, type="const")
VARselect(usconsumption, lag.max=7, type="const")$selection
?Var
library(fpp)
library(vars)
data(usconsumption, package = "fpp")
head(usconsumption)
var1 <- Var()
?VAR
?VAR
var1 <- VAR(usconsumption, p=1, type="cinst")
var1 <- VAR(usconsumption, p=1, type="const")
summary(var1)
savehistory(file = "Buchko_retake.Rhistory")
# =============== TASK 2 ===============
df <- read.csv('attend.csv')
setwd("~/Desktop/Учеба/2 семестр/3 модуль/dz4")
# =============== TASK 2 ===============
df <- read.csv('attend.csv')
df
df <- read.csv('attend.csv')
df <- within(df,  priGPA2 <- priGPA * priGPA)
df <- within(df,  ACT2 <- ACT * ACT)
df <- within(df,  priGPA_x_atndrte <- priGPA * atndrte)
df <- within(df,  atndrte2 <- atndrte * atndrte)
df <- within(df,  atndrte_x_ACR<- ACT * atndrte)
m <- lm(stndfnl ~ atndrte + priGPA + ACT + priGPA2 + ACT2 + priGPA_x_atndrte, data=df)
summary(m)
m1 <- lm(stndfnl ~ atndrte + priGPA + ACT + priGPA2 + ACT2 + priGPA_x_atndrte
+ atndrte2 + atndrte_x_ACR, data=df)
summary(m1)
summary(m1)
linearHypothesis(m1, c('atndrte2 = 0', 'atndrte_x_ACR = 0'))
library(sandwich)
library(stargazer)
library(lmtest)
library(car)
library(margins)
options(scipen=999)
summary(m1)
linearHypothesis(m1, c('atndrte2 = 0', 'atndrte_x_ACR = 0'))
summary(m1)
summary(m)
# =============== TASK 4 ===============
df <- read.csv('hprice1.csv')
df
m <- lm(price ~ lotsize + sqrft + bdrms, data=df)
coeftest(m, vcov=vcovHC(m, type='HC1'))
stargazer(coeftest(m, vcov=vcovHC(m, type='HC1')))
m
summary(m)
predict(m, at=)
help(predict)
predict(m, newdata=list('lotsize'=10000, 'sqrft'=2300, 'bdrms'=4))
m <- lm(price ~ lotsize + sqrft + bdrms, data=df)
df <- read.csv('hprice1.csv')
df <- within(df, lotsize <- lotsize - 10000)
df <- within(df, sqrft <- sqrft - 2300 )
df <- within(df, bdrms <- bdrms - 4)
m <- lm(price ~ lotsize + sqrft + bdrms, data=df)
summary(m)
confint(m)
confint(m, '(Intercept)')
stargazer(confint(m, '(Intercept)'))
# =============== TASK 4 ===============
df <- read.csv('hprice1.csv')
m <- lm(price ~ lotsize + sqrft + bdrms, data=df)
summary(m)
stargazer(coeftest(m, vcov=vcovHC(m, type='HC1')))
m <- lm(price ~ lotsize + sqrft + bdrms, data=df)
summary(m)
df <- read.csv('hprice1.csv')
df <- within(df, lotsize <- lotsize - 10000)
df <- within(df, sqrft <- sqrft - 2300 )
df <- within(df, bdrms <- bdrms - 4)
m <- lm(price ~ lotsize + sqrft + bdrms, data=df)
summary(m)
df <- read.csv('cps99_ps3.csv')
df <- read.csv('cps99_ps3.csv')
abs(-2)
abs(female - 1)
abs(df['female'] - 1)
df['female']
df <- within(df, male <- abs(df[['female']] - 1))
df <- within(df, male_x_yrseduc <- male  * yrseduc)
df <- within(df, female_x_yrseduc <- female  * yrseduc)
m <- lm(log(ahe) ~ yrseduc + female + male_x_yrseduc + female_x_yrseduc, data=df)
m <- lm(log(ahe) ~ yrseduc + female + male_x_yrseduc + female_x_yrseduc, data=df)
summary(m)
m <- lm(log(ahe) ~ yrseduc + female + male_x_yrseduc + female_x_yrseduc, data=df)
summary(m)
df[['male_x_yrseduc']] + df[['female_x_yrseduc']]
df[['yrseduc']] - df[['male_x_yrseduc']] + df[['female_x_yrseduc']]
df[['yrseduc']] - df[['male_x_yrseduc']] - df[['female_x_yrseduc']]
summary(m)
alias(df)
# =============== TASK 5 ===============
df <- read.csv('cps99_ps3.csv')
# =============== TASK 5 ===============
df <- read.csv('cps99_ps3.csv')
df <- within(df, female_x_yrseduc <- female * yrseduc)
m <- lm(log(ahe) ~ yrseduc + female +female_x_yrseduc, data=df)
summary(m)
stargazer(summary(m))
stargazer(m)
abline(m)
plot
df[['yrseduc']]
plot(df[['yrseduc']], log(df[['ahe']]), pch = 16, cex = 1.3,
col = "blue", main = "HEIGHT PLOTTED AGAINST BODY MASS",
xlab = "BODY MASS (kg)", ylab = "HEIGHT (cm)")
abline(m)
library(sjPlot)
library(sjmisc)
library(ggplot2)
theme_set(theme_sjplot())
install
library.install
install.packages('sjPlot')
install.packages('sjmisc')
library(sjPlot)
library(sjmisc)
library(ggplot2)
m <- lm(log(ahe) ~ yrseduc + female +female * yrseduc, data=df)
plot_model(m, terms = c("female", "yrseduc"))
plot_model(m,type = "pred", terms = c("female", "yrseduc"))
plot_model(m,type = "pred", terms = c("female"))
plot_model(m,type = "eff", terms = c("female", "yrseduc"))
plot_model(m,type = "emm", terms = c("female", "yrseduc"))
plot_model(m,type = "int", terms = c("female", "yrseduc"))
fun1 <- function(x) sin(cos(x)*exp(-x/2))
plot (fun1, -8, 5)
# =============== TASK 5 ===============
df <- read.csv('cps99_ps3.csv')
df <- within(df, female_x_yrseduc <- female * yrseduc)
m <- lm(log(ahe) ~ yrseduc + female +female_x_yrseduc, data=df)
summary(m)
fun1 <- function(x) 1.587570 + 0.082676 * x
plot(fun1, 0, 10)
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(female, 0, 10, add=TRUE)
plot(male, 0, 10, color='r')
male <- function(x) 1.587570 + 0.082676 * x
plot(male, 0, 10, color='r')
plot(male, 0, 10, color='red')
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(female, 0, 10, add=TRUE)
plot
gelp(plot)
help(plot)
plot(male, 0, 10, col='red')
plot(male, 0, 10, col='blue')
plot(male, 0, 10, col='blue', lwd=1)
plot(male, 0, 10, col='blue', lwd=2)
plot(male, 0, 10, col='blue', lwd=3)
plot(male, 0, 10, col='blue', lwd=3, lab='title')
male <- function(x) 1.587570 + 0.082676 * x
plot(male, 0, 10, col='blue', lwd=3, lab='title')
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(male, 0, 10, col='blue', lwd=3)
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(female, 0, 10, add=TRUE)
legend(0, 10, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
1
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(male, 0, 10, col='blue', lwd=3, ylab'log(ahe)')
plot(male, 0, 10, col='blue', lwd=3, ylab='log(ahe)')
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(female, 0, 10, add=TRUE)
plot(male, 0, 10, col='blue', lwd=3, ylab='log(ahe)', xlab='yrseduc')
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(female, 0, 10, add=TRUE)
legend(1, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(4, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(10, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(10, 5, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(5, 5, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend('topright', legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend('topleft', legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
male <- function(x) 1.587570 + 0.082676 * x
plot(male, 0, 10, col='blue', lwd=3, ylab='log(ahe)', xlab='yrseduc')
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(female, 0, 10, add=TRUE)
legend('topleft', legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend('topleft', legend=c("Line 1", "Line 2"),
col=c("blue", "pink"), lty=1:2, cex=0.8)
legend('topleft', legend=c("Line 1", "Line 2"),
col=c("blue", "red"), lty=1:2, cex=0.8)
legend('topleft', legend=c("Line 1", "Line 2"),
col=c("blue", "red"), lty=1:2)
legend('topleft', legend=c("Line 1", "Line 2"),
col=c("blue", "red"))
plot(male, 0, 10, col='blue', lwd=3, ylab='log(ahe)', xlab='yrseduc')
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(female, 0, 10, add=TRUE)
legend('topleft', legend=c("Line 1", "Line 2"),
col=c("blue", "red"), lty=1:1)
plot(female, 0, 10,col='red', add=TRUE)
plot(female, 0, 10,col='red', add=TRUE, lwd=3)
plot(female, 0, 10,col='red', add=TRUE, lwd=2)
male <- function(x) 1.587570 + 0.082676 * x
plot(male, 0, 10, col='blue', lwd=3, ylab='log(ahe)', xlab='yrseduc')
female <- function(x) (1.587570 - 0.463508)  + (0.082676 + 0.016665) * x
plot(female, 0, 10,col='red', add=TRUE, lwd=2)
legend('topleft', legend=c("male", "female"),
col=c("blue", "red"), lty=1:1)
# =============== TASK 5 ===============
df <- read.csv('cps99_ps3.csv')
df <- within(df, female_x_yrseduc <- female * yrseduc)
m <- lm(log(ahe) ~ yrseduc + female +female_x_yrseduc, data=df)
summary(m)
linearHypothesis(m, c('female = 0', 'female_x_yrseduc = 0'), )
# =============== TASK 7 ===============
df <- read.csv('cps99_ps3.csv')
df
m1 <- lm(log(ahe) ~ yrseduc + female + female * yrseduc + age + age2 + age3, data=df)
# =============== TASK 7 ===============
df <- read.csv('cps99_ps3.csv')
df <- within(df, age2 <- age * age)
df <- within(df, age3 <- age2 * age)
m1 <- lm(log(ahe) ~ yrseduc + female + female * yrseduc + age + age2 + age3, data=df)
m1
summary(m1)
m1 <- lm(log(ahe) ~ yrseduc + female + female * yrseduc + age + age2 + age3 + female* age + female * age2 + female * age3, data=df)
summary(m1)
stargazer(summary(m1))
stargazer(m1)
m1 <- lm(log(ahe) ~ yrseduc + female + female * yrseduc + age + age2 + age3, data=df)
stargazer(m1)
m2 <- lm(log(ahe) ~ yrseduc + female + female * yrseduc + age + age2 + age3 + female* age + female * age2 + female * age3, data=df)
stargazer(m2)
summary(m2)
margins(m2, at=list('female'=1, age=25, age2=625, age3=15625, yrseduc=16))
0.041506426 + 0.020453557
summary(m2)
predict(m2, newdata=list('female'=1, age=25, age2=625, age3=15625, yrseduc=16))
predict(m2, newdata=list('female'=0, age=25, age2=625, age3=15625, yrseduc=16))
2.618 - 2.534
predict(m2, newdata=list('female'=0, age=55, age2=625, age3=15625, yrseduc=16))
lhs <- predict(m2, newdata=list('female'=0, age=55, age2=625, age3=15625, yrseduc=16))
rhs <- predict(m2, newdata=list('female'=1, age=55, age2=625, age3=15625, yrseduc=16))
lhs - rhs
rhs
lhs
lhs <- predict(m2, newdata=list('female'=0, age=25, age2=625, age3=15625, yrseduc=16))
rhs <- predict(m2, newdata=list('female'=1, age=25, age2=625, age3=15625, yrseduc=16))
lhs - rhs
5
55*55
3025*55
lhs <- predict(m2, newdata=list('female'=0, age=55, age2=3025, age3=166375, yrseduc=16))
rhs <- predict(m2, newdata=list('female'=1, age=55, age2=3025, age3=166375, yrseduc=16))
lhs - rhs
summary(m2)
